Hello! Type 'start' to start the CLIrcuit Assistant
Hello from
 _____ _      _____                _ _                      _     _              _
/ ____| |    |_   _|              (_) |       /\           (_)   | |            | |
| |    | |      | |  _ __ ___ _   _ _| |_     /  \   ___ ___ _ ___| |_ __ _ _ __ | |_
| |    | |      | | | '__/ __| | | | | __|   / /\ \ / __/ __| / __| __/ _` | '_ \| __|
| |____| |____ _| |_| | | (__| |_| | | |_   / ____ \\__ \__ \ \__ \ || (_| | | | | |_
\_____|______|_____|_|  \___|\__,_|_|\__| /_/    \_\___/___/_|___/\__\__,_|_| |_|\__|

Welcome to the CLIrcuit Assistant!

             +----------------------------------------+
             |    Command    |     Template Name      |
             +----------------------------------------+
             |                Circuit                 |
             +----------------------------------------+
             | template r    | Resistor               |
             | template rc   | Resistor-Capacitor     |
             | template rl   | Resistor-Inductor      |
             | template lc   | Inductor-Capacitor     |
             +--------------+-------------------------+
             |                Boolean                 |
             +----------------------------------------+
             | template or   | Or Gate                |
             | template and  | And Gate               |
             | template nor  | Nor Gate               |
             | template xor  | Xor Gate               |
             | template nand | Nand Gate              |
             | template xnor | Xnor Gate              |
             +--------------+-------------------------+

Type one of the above template commands to get started with your template.
You have entered Tutorial Mode!
Type 'exit' if you want to leave this mode and go back to the application.
Lets get started! First choose a template you want to work with.You can choose from rc, rl, lc and r templates.
eg. To select the Resistor-Capacitor circuit template, enter 'template rc.'
	+---R-----C---+
	|             |
	|             |
	+----+V_ac+---+
Current Voltage: 0.0 V
Total Resistance: 0.0 Ω
Total Capacitance: 0.0 µF

Lets set a value to our power source! Type in 'set v VALUE' , where VALUE is a +ve number in volts.
The voltage source was changed to: 5.0 V
Lets set a value to resistor/capacitor/inductor! To do so, type 'set' followed by 'r' OR 'c' OR 'l' followed by a numeric VALUE. eg. 'set r 500' will set the resistor to 500Ω
The resistor was set to 500.0 Ω
	+---R-----C---+
	|             |
	|             |
	+----+V_ac+---+
Current Voltage: 5.0 V
Total Resistance: 500.0 Ω
Total Capacitance: 0.0 µF

Lets set another value in our template! Here's the syntax for reference 'set r/l/c/v VALUE'.
The capacitor was set to 20.0 µF
	+---R-----C---+
	|             |
	|             |
	+----+V_ac+---+
Current Voltage: 5.0 V
Total Resistance: 500.0 Ω
Total Capacitance: 20.0 µF

Want to add a component in parallel/series to your current component? Lets do that! Type in 'add' followed by 'series/parallel' then 'r'/'c'/'l' and a numeric VALUE.
eg. 'add parallel c 500' will add a capacitor in parallel to the capacitor in your circuit (if any).
Nice, added a 40.0 µF
	+---R-----C---+
	|             |
	|             |
	+----+V_ac+---+
Current Voltage: 5.0 V
Total Resistance: 500.0 Ω
Total Capacitance: 40.0 µF

Great! Say, do you think we could find effective power/current consumed by the circuit?Or even effective resistance/inductance/capacitance? Yes!
Lets try it out. Type 'calc' followed by 'ceff'/'leff'/'reff'/'power'/'current' and enter. :D
The power dissipated in the circuit is 0.04937852460756959W
Great! You're set to use
 _____ _      _____                _ _                      _     _              _
/ ____| |    |_   _|              (_) |       /\           (_)   | |            | |
| |    | |      | |  _ __ ___ _   _ _| |_     /  \   ___ ___ _ ___| |_ __ _ _ __ | |_
| |    | |      | | | '__/ __| | | | | __|   / /\ \ / __/ __| / __| __/ _` | '_ \| __|
| |____| |____ _| |_| | | (__| |_| | | |_   / ____ \\__ \__ \ \__ \ || (_| | | | | |_
\_____|______|_____|_|  \___|\__,_|_|\__| /_/    \_\___/___/_|___/\__\__,_|_| |_|\__|Enjoy! :)
 type 'exit' to exit this mode.

You have exited Tutorial Mode!
Here's a summary of available commands:
+-----------+----------------------------+---------------------+
|  Command  |         Circuit            |      Boolean        |
+-----------+----------------------------+---------------------+
| Tutorial  | tutorial circuit           | tutorial boolean    |
| Template  | template TEMPLATE          | template TEMPLATE   |
| Summary   | summary                    | summary             |
| Set       | set COMPONENT VALUE        | set INPUT BOOLVALUE |
| Add       | add CONFIG COMPONENT VALUE | add INPUT GATE      |
| Calculate | calc EFF_VALUE             | calc                |
| Exit      | exit                       | exit                |
| Print     | print                      | print               |
+-----------+----------------------------+---------------------+

Here's a summary of the command parameters: 
+-----------+----------------------------------+-------------------------------+
| Parameter |       Circuit Params             | Boolean Params                |
+-----------+----------------------------------+-------------------------------+
| TEMPLATE  | rc, rl, r, cl                    | boolean                       |
| COMPONENT | r, c, l, v                       | N.A.                          |
| CONFIG    | parallel, series                 | N.A                           |
| EFF_VALUE | reff, ceff, leff, current, power | N.A                           |
| VALUE     | any number of double datatype    | N.A                           |
| INPUT     | N.A                              | A, B, C, D, E, F, G           |
| GATE      | N.A                              | or, and, nor, nand, xor, xnor |
| BOOLVALUE | N.A                              | 0, 1                          |
+-----------+----------------------------------+-------------------------------+
:) Have fun using CLIrcuit Assistant!
Here's a summary of available commands:
+-----------+----------------------------+---------------------+
|  Command  |         Circuit            |      Boolean        |
+-----------+----------------------------+---------------------+
| Tutorial  | tutorial circuit           | tutorial boolean    |
| Template  | template TEMPLATE          | template TEMPLATE   |
| Summary   | summary                    | summary             |
| Set       | set COMPONENT VALUE        | set INPUT BOOLVALUE |
| Add       | add CONFIG COMPONENT VALUE | add INPUT GATE      |
| Calculate | calc EFF_VALUE             | calc                |
| Exit      | exit                       | exit                |
| Print     | print                      | print               |
+-----------+----------------------------+---------------------+

Here's a summary of the command parameters:
+-----------+----------------------------------+-------------------------------+
| Parameter |       Circuit Params             | Boolean Params                |
+-----------+----------------------------------+-------------------------------+
| TEMPLATE  | rc, rl, r, cl                    | boolean                       |
| COMPONENT | r, c, l, v                       | N.A.                          |
| CONFIG    | parallel, series                 | N.A                           |
| EFF_VALUE | reff, ceff, leff, current, power | N.A                           |
| VALUE     | any number of double datatype    | N.A                           |
| INPUT     | N.A                              | A, B, C, D, E, F, G           |
| GATE      | N.A                              | or, and, nor, nand, xor, xnor |
| BOOLVALUE | N.A                              | 0, 1                          |
+-----------+----------------------------------+-------------------------------+

	+---R-----C---+
	|             |
	|             |
	+----+V_ac+---+
Current Voltage: 0.0 V
Total Resistance: 0.0 Ω
Total Capacitance: 0.0 µF

The voltage source was changed to: 5.0 V
The resistor was set to 200.0 Ω
	+---R-----C---+
	|             |
	|             |
	+----+V_ac+---+
Current Voltage: 5.0 V
Total Resistance: 200.0 Ω
Total Capacitance: 0.0 µF

The capacitor was set to 10.0 µF
	+---R-----C---+
	|             |
	|             |
	+----+V_ac+---+
Current Voltage: 5.0 V
Total Resistance: 200.0 Ω
Total Capacitance: 10.0 µF

Nice, added a 400.0 Ω
	+---R-----C---+
	|             |
	|             |
	+----+V_ac+---+
Current Voltage: 5.0 V
Total Resistance: 400.0 Ω
Total Capacitance: 10.0 µF

Nice, added a 5.0 µF
	+---R-----C---+
	|             |
	|             |
	+----+V_ac+---+
Current Voltage: 5.0 V
Total Resistance: 400.0 Ω
Total Capacitance: 5.0 µF

Nice, added a 133.33333333333334 Ω
	+---R-----C---+
	|             |
	|             |
	+----+V_ac+---+
Current Voltage: 5.0 V
Total Resistance: 133.33333333333334 Ω
Total Capacitance: 5.0 µF

The resistor was set to 100.0 Ω
	+---R-----C---+
	|             |
	|             |
	+----+V_ac+---+
Current Voltage: 5.0 V
Total Resistance: 100.0 Ω
Total Capacitance: 5.0 µF

The capacitor was set to 2.0 µF
	+---R-----C---+
	|             |
	|             |
	+----+V_ac+---+
Current Voltage: 5.0 V
Total Resistance: 100.0 Ω
Total Capacitance: 2.0 µF

The total rms current flowing through the circuit is 0.0031354096992368807A
          0UT
           |
     B           C

OUT = B AND C
B = ?
C = ?

          0UT
           |
     B           C

OUT = B AND C
B = 1
C = ?

          0UT
           |
     B           C

              F     G

OUT = B AND C
B = 1
C = F OR G
F = ?
G = ?

          0UT
           |
     B           C

              F     G

OUT = B AND C
B = 1
C = F OR G
F = 0
G = ?

          0UT
           |
     B           C

              F     G

                  N   O

OUT = B AND C
B = 1
C = F OR G
F = 0
G = N XOR O
N = ?
O = ?

          0UT
           |
     B           C

              F     G

                  N   O

OUT = B AND C
B = 1
C = F OR G
F = 0
G = N XOR O
N = 1
O = ?

          0UT
           |
     B           C

              F     G

                  N   O

OUT = B AND C
B = 1
C = F OR G
F = 0
G = N XOR O
N = 1
O = 0

          0UT
           |
     B           C

              F     G

                  N   O

OUT = B AND C
B = 1
C = F OR G
F = 0
G = N XOR O
N = 1
O = 0

The output of the above configuration is 1.
 Bye. See you next time!
