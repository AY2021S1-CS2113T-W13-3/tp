@startuml

box logic
participant ":CalculateBooleanCommand" as Calc
end box

box model
participant ":BooleanTemplate" as Bool
participant ":BinaryTree" as BT
participant ":Gate" as Gate
end box

[-> Calc : execute()
activate Calc

Calc -> Bool : calculateOutput(index)
activate Bool

Bool -> BT : getRightIndex(index)
activate BT

BT --> Bool : rightIndex
deactivate BT

Bool -> BT : getLeftIndex(index)
activate BT

BT --> Bool : leftIndex
deactivate BT

Bool -> BT : isNullAtIndex(rightIndex)
activate BT

BT --> Bool : isNullAtRight
deactivate BT

Bool -> BT : getLeftIndex(index)
activate BT

BT --> Bool : isNullAtLeft
deactivate BT

Bool -> BT: getT(index)
activate BT

BT -> Gate : arrayList.get(index)
activate Gate

Gate --> BT : gate
deactivate Gate

BT --> Bool: gate
deactivate BT

alt !isNullAtLeft

Bool -> Gate: setInput(calculateOutput(leftIndex))
activate Gate

Gate --> Bool
deactivate Gate

end

alt !isNullAtRight

Bool -> Gate : setSecondInput(calculateOutput(rightIndex))
activate Gate

Gate --> Bool
deactivate Gate

end

deactivate Gate
deactivate Gate

Bool -> BT: getT(index)
activate BT

BT -> Gate: arrayList.get(index)
activate Gate

Gate --> BT : gate
deactivate Gate

BT --> Bool : gate
deactivate BT

Bool -> Gate : gate.getOuput()
activate Gate

Gate --> Bool: output
deactivate Gate

Bool --> Calc: output
deactivate Bool

[<-- Calc: output
deactivate Calc
@enduml